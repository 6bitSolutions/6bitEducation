"use strict";var precacheConfig=[["/index.html","1412a00b62f25619f692e57434843189"],["/static/css/main.33e0aa0a.css","04475631da880285472710b38ea94a69"],["/static/js/main.7c3dc99d.js","df70b6087009660d0f4fceee3858720f"],["/static/media/AvenirNext-Bold.d32a9b02.ttf","d32a9b02c6322f509ab5fc479409d5fc"],["/static/media/AvenirNext-DemiBold.5e8d8aa6.ttf","5e8d8aa679d32fa464cf8347672fb583"],["/static/media/AvenirNext-Heavy.1958b544.ttf","1958b5447213b96ce8b44bba536198f8"],["/static/media/AvenirNext-Regular.3c041f66.ttf","3c041f665736d0f1040880ec0d0552f2"],["/static/media/HomeScreen_elLogo_499865.9dc1662a.png","9dc1662a607128a622570b06b2294899"],["/static/media/PeopleSmall_elRoundimage_990244.3b3b95a6.png","3b3b95a6c388eb0596343b57a0919c6e"],["/static/media/datasheet_people_row0_picture.98257a5e.png","98257a5ea692f4300e4cf23460fbb521"],["/static/media/datasheet_people_row1_picture.91df96ec.png","91df96ec32771b63fd29a7efb103fd51"],["/static/media/datasheet_people_row2_picture.c36426ea.png","c36426eaff9500b8e1b91870c5ebc953"],["/static/media/datasheet_people_row3_picture.205f86b9.png","205f86b9a48e983ec690b98eb4a4d356"],["/static/media/datasheet_people_row4_picture.f18978a7.png","f18978a7b3f9b80b5282eb59b53e219f"],["/static/media/datasheet_people_row5_picture.7cc36372.png","7cc363722b3f28d160b72171ace9adc7"],["/static/media/datasheet_people_row6_picture.9db1c1b3.png","9db1c1b395ea1296dee6b15e9db78d90"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});